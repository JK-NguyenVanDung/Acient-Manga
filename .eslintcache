[{"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\index.js":"1","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\reportWebVitals.js":"2","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\App.js":"3","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\index.js":"4","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\NavBar\\NavBar.js":"5","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\NavBar\\NavBar.elements.js":"6","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\globalStyles.js":"7","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\HomePage\\Home.js":"8","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\MangaSlides\\MangaSlider.js":"9","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\MangaTable\\MangaTable.js":"10","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\ReadHistory\\ReadHistory.js":"11","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\SuggestionSlider\\SuggestionSlider.js":"12","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Footer\\Footer.js":"13","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Icons\\Icons.js":"14","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Footer\\Footer.elements.js":"15","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\MangaPage\\Manga.js":"16","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\MangaPage\\ReadMore.js":"17","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\MangaPage\\Read.js":"18","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\SearchResult\\SearchResult.js":"19","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Paths\\Paths.js":"20","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Pagination\\Pagination.js":"21","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\QuickMangaSlider\\QuickMangaSlider.js":"22","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Upload\\UploadManga.js":"23","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Dropzone\\Dropzone.js":"24","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\CommentSec\\CommentSec.js":"25","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Login\\Login.js":"26","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Login\\SignUp.js":"27","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Login\\ForgotPassword.js":"28","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\UserContext.js":"29","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\SearchResult\\PageNotFound.js":"30","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\MetaDecorator\\MetaDecorator.js":"31"},{"size":500,"mtime":1611287843101,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1859,"mtime":1615343836648,"results":"35","hashOfConfig":"33"},{"size":907,"mtime":1615345093633,"results":"36","hashOfConfig":"33"},{"size":9022,"mtime":1617068062905,"results":"37","hashOfConfig":"33"},{"size":9614,"mtime":1618736260187,"results":"38","hashOfConfig":"33"},{"size":1150,"mtime":1613041058620,"results":"39","hashOfConfig":"33"},{"size":1062,"mtime":1615432422519,"results":"40","hashOfConfig":"33"},{"size":3754,"mtime":1614433809074,"results":"41","hashOfConfig":"33"},{"size":2581,"mtime":1613134870333,"results":"42","hashOfConfig":"33"},{"size":1546,"mtime":1613099191625,"results":"43","hashOfConfig":"33"},{"size":2140,"mtime":1613052388548,"results":"44","hashOfConfig":"33"},{"size":1710,"mtime":1611817739276,"results":"45","hashOfConfig":"33"},{"size":179,"mtime":1611818782349,"results":"46","hashOfConfig":"33"},{"size":1158,"mtime":1611817004573,"results":"47","hashOfConfig":"33"},{"size":3761,"mtime":1615435197784,"results":"48","hashOfConfig":"33"},{"size":2899,"mtime":1612533759348,"results":"49","hashOfConfig":"33"},{"size":2728,"mtime":1615434127491,"results":"50","hashOfConfig":"33"},{"size":3938,"mtime":1615435920491,"results":"51","hashOfConfig":"33"},{"size":1117,"mtime":1612533446232,"results":"52","hashOfConfig":"33"},{"size":1287,"mtime":1612844377968,"results":"53","hashOfConfig":"33"},{"size":1899,"mtime":1613050194363,"results":"54","hashOfConfig":"33"},{"size":4450,"mtime":1613621859975,"results":"55","hashOfConfig":"33"},{"size":2942,"mtime":1613619804321,"results":"56","hashOfConfig":"33"},{"size":7324,"mtime":1614679414056,"results":"57","hashOfConfig":"33"},{"size":7975,"mtime":1617029395215,"results":"58","hashOfConfig":"33"},{"size":3702,"mtime":1615432379548,"results":"59","hashOfConfig":"33"},{"size":2197,"mtime":1615436744043,"results":"60","hashOfConfig":"33"},{"size":91,"mtime":1613831510764,"results":"61","hashOfConfig":"33"},{"size":359,"mtime":1615345197130,"results":"62","hashOfConfig":"33"},{"size":448,"mtime":1615345090471,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ovuqhm",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\index.js",[],["140","141"],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\reportWebVitals.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\App.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\index.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\NavBar\\NavBar.js",["142","143"],"import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { Button } from \"../../globalStyles\";\r\nimport genres from \"P:/TruyenTranh9x/truyen-tranh-9x/src/json/genres.json\";\r\nimport { useHistory } from \"react-router\";\r\nimport { UserContext } from \"../../UserContext\";\r\n\r\nimport {\r\n  Nav,\r\n  NavBarContainer,\r\n  NavLogo,\r\n  NavIcon,\r\n  MobileIcon,\r\n  NavMenu,\r\n  NavItem,\r\n  NavLinks,\r\n  NavBtn,\r\n  NavItemBtn,\r\n  NavBtnLink,\r\n  Wrapper,\r\n  Search,\r\n  InputField,\r\n  SearchResultsBox,\r\n  SearchResult,\r\n  Icon,\r\n  InputIcon,\r\n  TextResult,\r\n  ImgResult,\r\n  DdList,\r\n  DdListItem,\r\n  NavAvatar,\r\n  UserAvatar,\r\n  AvatarListItem,\r\n  AvatarBtn,\r\n} from \"./NavBar.elements\";\r\n// not use yet\r\nfunction readJson() {\r\n  fetch(\"../../MOCK_DATA.json\")\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(\"HTTP error \" + response.status);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((json) => {\r\n      this.users = json;\r\n      //console.log(this.users);\r\n    })\r\n    .catch(function () {\r\n      this.dataError = true;\r\n    });\r\n} //example\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize([window.innerHeight, window.innerWidth]);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n  const handleClick = () => setClick(!click);\r\n\r\n  const [options, setOptions] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const wrapperRef = useRef(null);\r\n\r\n  const [displaySB, setdisplaySB] = useState(false);\r\n  const [displayYM, setdisplayYM] = useState(false);\r\n  const [displayG, setdisplayG] = useState(false);\r\n  const [displayA, setdisplayA] = useState(false);\r\n\r\n  const [isHoverYM, setHoverYM] = useState(false);\r\n  const [isHoverG, setHoverG] = useState(false);\r\n\r\n  const { user, setUser } = useContext(UserContext);\r\n\r\n  const [height, width] = useWindowSize();\r\n  const items = [\r\n    {\r\n      id: 1,\r\n      value: \"Truyện 10x\",\r\n      link: \"/Search/Truyen-10x\",\r\n    },\r\n    {\r\n      id: 2,\r\n      value: \"Truyện 9x\",\r\n      link: \"/Search/Truyen-9x\",\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"Truyện 8x\",\r\n      link: \"/Search/Truyen-8x\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const title = [];\r\n    const promises = new Array(10)\r\n      .fill()\r\n      .map((val, i) =>\r\n        fetch(`https://pokeapi.co/api/v2/pokemon-form/${i + 1}`)\r\n      );\r\n    Promise.all(promises).then((titleArr) => {\r\n      return titleArr.map((res) =>\r\n        res.json().then(({ name, sprites: { front_default: sprite } }) => {\r\n          return title.push({ name, sprite });\r\n        })\r\n      );\r\n    });\r\n    setOptions(title);\r\n  }, []);\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  const handleClickOutside = (event) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setdisplaySB(false);\r\n      setdisplayYM(false);\r\n      setdisplayG(false);\r\n      setdisplayA(false);\r\n    }\r\n  };\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 1024) {\r\n      setButton(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  const setSelectedTitle = (title) => {\r\n    setSearch(title);\r\n    history.push(\"/Search/\" + title);\r\n    setdisplaySB(false);\r\n    setSearch(\"\");\r\n  };\r\n  window.addEventListener(\"resize\", showButton);\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav ref={wrapperRef}>\r\n          <NavBarContainer>\r\n            <NavLogo to=\"/\">\r\n              <NavIcon />\r\n              Manga Cổ Đại\r\n            </NavLogo>\r\n            <MobileIcon onClick={handleClick}>\r\n              {click ? <FaTimes /> : <FaBars />}\r\n            </MobileIcon>\r\n            <Wrapper>\r\n              <Search>\r\n                <InputField\r\n                  placeholder=\"Tìm Kiếm\"\r\n                  value={search}\r\n                  onClick={() => setdisplaySB(!displaySB)}\r\n                  onChange={(event) => setSearch(event.target.value)}\r\n                />\r\n                {displaySB && (\r\n                  <SearchResultsBox>\r\n                    {options\r\n                      .filter(\r\n                        ({ name }) => name.indexOf(search.toLowerCase()) > -1\r\n                      )\r\n                      .map((v, i) => {\r\n                        return (\r\n                          <SearchResult\r\n                            onClick={() => setSelectedTitle(v.name)}\r\n                            key={i}\r\n                          >\r\n                            <TextResult>{v.name}</TextResult>\r\n                            <ImgResult src={v.sprite} alt=\"pokemon\" />\r\n                          </SearchResult>\r\n                        );\r\n                      })}\r\n                  </SearchResultsBox>\r\n                )}\r\n                <Icon>\r\n                  <InputIcon\r\n                    color=\"#644bff\"\r\n                    onClick={() => history.push(\"/Search/\" + search)}\r\n                  />\r\n                </Icon>\r\n              </Search>\r\n            </Wrapper>\r\n            <NavMenu click={click} width={!user ? \"50%\" : \"50%\"}>\r\n              <NavItem width=\"20%\">\r\n                <NavLinks to=\"/\">Trang Chủ</NavLinks>\r\n              </NavItem>\r\n              <NavItem\r\n                width=\"15%\"\r\n                borderBottom=\"none\"\r\n                onClick={() => setdisplayG(!displayG)}\r\n                onMouseEnter={() => setHoverG(true)}\r\n                onMouseLeave={() => setHoverG(false)}\r\n              >\r\n                <NavBtn>Thể Loại</NavBtn>\r\n                {(width > 1024 ? isHoverG : null) || displayG ? (\r\n                  <DdList width=\"25%\">\r\n                    {genres.map((genre, index) => (\r\n                      <DdListItem key={index}>\r\n                        <NavLinks to={genre.value}>{genre.name}</NavLinks>\r\n                      </DdListItem>\r\n                    ))}\r\n                  </DdList>\r\n                ) : null}\r\n              </NavItem>\r\n              <NavItem\r\n                width=\"20%\"\r\n                borderBottom=\"none\"\r\n                onClick={() => setdisplayYM(!displayYM)}\r\n                onMouseEnter={() => setHoverYM(true)}\r\n                onMouseLeave={() => setHoverYM(false)}\r\n              >\r\n                <NavBtn>Năm Xuất Bản</NavBtn>\r\n                {console.log(width)}\r\n                {(width > 1024 ? isHoverYM : null) || displayYM ? (\r\n                  <DdList position=\"relative\" top=\"-10px\" overflowY=\"hidden\">\r\n                    {items.map((item) => (\r\n                      <DdListItem key={item.id}>\r\n                        <NavLinks to={item.link}>{item.value}</NavLinks>\r\n                      </DdListItem>\r\n                    ))}\r\n                  </DdList>\r\n                ) : null}\r\n              </NavItem>\r\n              {/* <NavItem>\r\n                <NavLinks to=\"/download\">Download</NavLinks>\r\n              </NavItem> */}\r\n              {user.username === \"admin\" ? (\r\n                <NavItem width=\"80px\">\r\n                  <NavLinks to=\"/upload\">Upload</NavLinks>\r\n                </NavItem>\r\n              ) : null}\r\n              <NavItem width={user.username === \"admin\" ? \"15%\" : \"15%\"}>\r\n                <NavLinks to=\"/contact\">Contact</NavLinks>\r\n              </NavItem>\r\n              {!user ? (\r\n                <NavItemBtn width=\"30%\">\r\n                  {button ? (\r\n                    <NavBtnLink to=\"/login\">\r\n                      <Button primary>Đăng Nhập</Button>\r\n                    </NavBtnLink>\r\n                  ) : (\r\n                    <NavBtnLink to=\"/login\">\r\n                      <Button fontBig primary>\r\n                        Đăng Nhập\r\n                      </Button>\r\n                    </NavBtnLink>\r\n                  )}\r\n                </NavItemBtn>\r\n              ) : null}\r\n            </NavMenu>\r\n            {user ? (\r\n              <NavAvatar onClick={() => setdisplayA(!displayA)}>\r\n                <UserAvatar src={user.imageUrl} alt={user.username} />\r\n                {displayA && (\r\n                  <AvatarListItem key=\"A1\">\r\n                    <AvatarBtn onClick={() => setUser(\"\")}>Đăng Xuất</AvatarBtn>\r\n                  </AvatarListItem>\r\n                )}\r\n              </NavAvatar>\r\n            ) : null}\r\n          </NavBarContainer>\r\n        </Nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\NavBar\\NavBar.elements.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\globalStyles.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\HomePage\\Home.js",["144"],"import React from \"react\";\r\nimport { MetaDecorator } from \"../../components\";\r\n\r\nimport {\r\n  MangaSlider,\r\n  MangaTable,\r\n  MangaTable2,\r\n  ReadHistory,\r\n  SuggestionSlider,\r\n  QuickMangaSlider,\r\n} from \"../../components\";\r\nexport const Home = () => {\r\n  return (\r\n    <>\r\n      <MetaDecorator title=\"Trang Chủ\" description=\"HomePage\" />\r\n\r\n      <MangaSlider />\r\n      <QuickMangaSlider />\r\n      <div class=\"row mainRow\">\r\n        <div class=\"col \">\r\n          <h2 class=\"h2\">Truyện Mới Cập Nhật</h2>\r\n          <MangaTable />\r\n          <div class=\"border-top my-5\"></div>\r\n          <h2 class=\"h2\">Truyện Cũ</h2>\r\n\r\n          <MangaTable />\r\n        </div>\r\n        <div class=\"col-sm-4 boxHistory\">\r\n          <div class=\" box\" id=\"customScroll\">\r\n            <h2 class=\"h2\">Lịch sử đọc</h2>\r\n            <ReadHistory />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"suggestion\">\r\n        <h2 class=\"h2\"> Truyện Gợi Ý</h2>\r\n        <SuggestionSlider />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\MangaSlides\\MangaSlider.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\MangaTable\\MangaTable.js",["145","146","147","148"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport NewMangaData from \"P:\\\\TruyenTranh9x\\\\truyen-tranh-9x\\\\src\\\\json\\\\Manga.json\";\r\nimport OldMangaData from \"P:\\\\TruyenTranh9x\\\\truyen-tranh-9x\\\\src\\\\json\\\\OldManga.json\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { BiFirstPage, BiLastPage } from \"react-icons/bi\";\r\nimport { MdNavigateNext, MdNavigateBefore } from \"react-icons/md\";\r\nexport const MangaTable = () => {\r\n  return GetTable(NewMangaData);\r\n};\r\nexport const MangaTable2 = () => {\r\n  return GetTable(OldMangaData);\r\n};\r\nexport function GetTable(data) {\r\n  const [tables, setTable] = useState(data.slice(0, data.length));\r\n  // useEffect(() => {\r\n  //   const fetchTables = async () => {\r\n  //     setLoading(true);\r\n  //     let res = data;\r\n  //     setTable(res);\r\n  //     setLoading(false);\r\n  //   };\r\n  //   fetchTables();\r\n  // }, []);\r\n\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const tablesPerPage = 20;\r\n\r\n  const pageVisited = currentPage * tablesPerPage;\r\n\r\n  const displayTables = tables.slice(pageVisited, pageVisited + tablesPerPage);\r\n\r\n  const pageCount = Math.ceil(tables.length / tablesPerPage);\r\n\r\n  const changePage = ({ selected }) => {\r\n    setCurrentPage(selected);\r\n  };\r\n  return (\r\n    <>\r\n      <div class=\"row\">\r\n        {displayTables.map((mangaDetail, index) => {\r\n          return (\r\n            <div className=\"table-card-wrapper\">\r\n              <div className=\"tablecard\">\r\n                <Link to={\"/Manga/\" + mangaDetail.manga_name}>\r\n                  <div className=\"tablecard-image\">\r\n                    <img\r\n                      src={mangaDetail.manga_art_cover}\r\n                      alt={mangaDetail.manga_name + \" art cover\"}\r\n                    />\r\n                    <div class=\"overlay\">\r\n                      <h4 class=\"manga-info\">{mangaDetail.manga_name}</h4>\r\n                      <p> Chapter {mangaDetail.latest_chapter}</p>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div class=\" paginationCont\">\r\n        <ReactPaginate\r\n          previousLabel={<MdNavigateBefore />}\r\n          nextLabel={<MdNavigateNext />}\r\n          pageCount={pageCount}\r\n          onPageChange={changePage}\r\n          containerClassName={\"paginationBtns\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default MangaTable;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\ReadHistory\\ReadHistory.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\SuggestionSlider\\SuggestionSlider.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Footer\\Footer.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Icons\\Icons.js",["149","150"],"import styled from \"styled-components\";\r\nimport { FaFacebook, FaMailBulk } from \"react-icons/fa\";\r\n\r\nexport const Icon = styled.i`\r\n  font-size: 18px;\r\n  margin-right: 16px;\r\n`;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Footer\\Footer.elements.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\MangaPage\\Manga.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\MangaPage\\ReadMore.js",["151"],"import React, { Component } from \"react\";\r\n\r\nconst ELLIPSES = \"…\";\r\nconst SHOW_LESS_TEXT = \"Rút Ngắn\";\r\nconst SHOW_MORE_TEXT = \"Đọc Thêm\";\r\n\r\nexport default class ReadMore extends Component {\r\n  static defaultProps = {\r\n    numberOfLines: 3,\r\n    lineHeight: 1,\r\n    readMoreCharacterLimit: 300,\r\n    showLessButton: false,\r\n  };\r\n\r\n  state = {\r\n    showingAll: false,\r\n  };\r\n\r\n  toggleReadMore = () => {\r\n    this.setState({\r\n      showingAll: !this.state.showingAll,\r\n    });\r\n  };\r\n\r\n  _getReadMoreParts = ({ text, numberOfLines, readMoreCharacterLimit }) => {\r\n    let teaserText;\r\n    let remainingText;\r\n    let remainingWordsArray = [];\r\n\r\n    if (text) {\r\n      const teaserWordsArray = text.split(\" \");\r\n\r\n      while (teaserWordsArray.join(\" \").length > readMoreCharacterLimit) {\r\n        remainingWordsArray.unshift(teaserWordsArray.pop());\r\n      }\r\n\r\n      teaserText = teaserWordsArray.join(\" \");\r\n\r\n      if (remainingWordsArray.length > 0) {\r\n        remainingText = remainingWordsArray.join(\" \");\r\n      }\r\n    }\r\n\r\n    return {\r\n      teaserText,\r\n      remainingText,\r\n    };\r\n  };\r\n\r\n  getText = ({ showingAll, text, readMoreCharacterLimit, numberOfLines }) => {\r\n    let { teaserText, remainingText } = this._getReadMoreParts({\r\n      text,\r\n      numberOfLines,\r\n      readMoreCharacterLimit,\r\n    });\r\n\r\n    if (!showingAll && text.length > readMoreCharacterLimit) {\r\n      return (\r\n        <span>\r\n          {teaserText.replace(/\\s*$/, \"\")}\r\n          <span className=\"read-more__text--remaining read-more__text--hide\">\r\n            {remainingText}\r\n          </span>\r\n          {ELLIPSES}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        {teaserText}\r\n        <span className=\"read-more__text--remaining read-more__text--show\">\r\n          {remainingText}\r\n        </span>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  getActionButton = ({ showingAll, showLessButton }) => {\r\n    if (showingAll && !showLessButton) {\r\n      return;\r\n    }\r\n\r\n    let buttonText = showingAll ? SHOW_LESS_TEXT : SHOW_MORE_TEXT;\r\n\r\n    return (\r\n      <button onClick={this.toggleReadMore} className=\"read-more__button\">\r\n        {buttonText}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      text,\r\n      readMoreCharacterLimit,\r\n      showLessButton,\r\n      onContentChange,\r\n      numberOfLines,\r\n      lineHeight,\r\n    } = this.props;\r\n\r\n    let maxHeight = numberOfLines * lineHeight;\r\n    let style = {\r\n      lineHeight,\r\n      maxHeight: `${maxHeight}em`,\r\n    };\r\n    let { showingAll } = this.state;\r\n    let textToDisplay = this.getText({\r\n      showingAll,\r\n      text,\r\n      readMoreCharacterLimit,\r\n      numberOfLines,\r\n    });\r\n    let actionButton = this.getActionButton({ showingAll, showLessButton });\r\n\r\n    return (\r\n      <div className=\"read-more\" style={style}>\r\n        {textToDisplay} {actionButton}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\MangaPage\\Read.js",["152","153","154","155"],"import React, { useState } from \"react\";\r\nimport Chapter from \"P:\\\\TruyenTranh9x\\\\truyen-tranh-9x\\\\src\\\\json\\\\NarutoChapter01.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation, useParams, useHistory } from \"react-router\";\r\nimport { Paths, CommentSec } from \"../../components\";\r\nimport { MetaDecorator } from \"../../components\";\r\n\r\nexport const NavManga = () => {\r\n  let location = useLocation();\r\n  let history = useHistory();\r\n  let { chapter } = useParams();\r\n  function moveToLink(link) {\r\n    history.push(link);\r\n  }\r\n  return (\r\n    <div class=\"card nav-card\">\r\n      {Paths(location.pathname)}\r\n      <h2 class=\"manga-title\">\r\n        {Chapter.manga_name} Chapter {Chapter.chapter_numb} -{\" \"}\r\n        {Chapter.chapter_title}{\" \"}\r\n      </h2>\r\n      <ul class=\"buttons-list\">\r\n        <li class=\"buttons\" key=\"0\">\r\n          <button\r\n            type=\"button\"\r\n            value={Chapter.previous_chap_link}\r\n            class=\"btn btn-outline-primary btn-lg \"\r\n            onClick={(e) => moveToLink(e.target.value)}\r\n          >\r\n            Chap Trước\r\n          </button>\r\n        </li>\r\n        <li class=\"buttons dropdown\" key=\"1\">\r\n          <select\r\n            class=\"custom-select drop-downBtn\"\r\n            defaut_value={Chapter.chapter_numb}\r\n            onChange={(e) => {\r\n              moveToLink(e.target.value);\r\n            }}\r\n          >\r\n            {Chapter.chapters_numb.map((chapter, index) => {\r\n              return (\r\n                <option value={Chapter.chapters_link[index]}>\r\n                  Chapter {Chapter.chapters_numb[index]}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </li>\r\n        <li class=\"buttons\" key=\"3\">\r\n          <button\r\n            type=\"button\"\r\n            value={Chapter.next_chap_link}\r\n            class=\"btn btn-outline-primary btn-lg chap-button\"\r\n            onClick={(e) => moveToLink(e.target.value)}\r\n          >\r\n            Chap Sau\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport const Read = () => {\r\n  return (\r\n    <>\r\n      <MetaDecorator\r\n        title={Chapter.chapter_title}\r\n        description={\r\n          Chapter.chapter_title +\r\n          \" is the \" +\r\n          Chapter.chapter_numb +\r\n          \" of \" +\r\n          Chapter.manga_name\r\n        }\r\n      />\r\n\r\n      <NavManga />\r\n      <ul class=\"images-list\">\r\n        {Chapter.images.map((image, index) => {\r\n          return <img class=\"img\" src={Chapter.images[index]} />;\r\n        })}\r\n      </ul>\r\n      <NavManga />\r\n      <div class=\"main-content manga-info-box\">\r\n        <CommentSec mangaComments={Chapter.comments} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Read;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\SearchResult\\SearchResult.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Paths\\Paths.js",["156"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Paths = (props) => {\r\n  const dirs = props.split(\"/\");\r\n  let link = \"\";\r\n  return (\r\n    <div class=\"path\">\r\n      {dirs.map((item, index) => {\r\n        return (\r\n          <>\r\n            {index === 0 ||\r\n            index === dirs.length ||\r\n            dirs[index] === \"\" ? null : (\r\n              <span> / </span>\r\n            )}\r\n            <Link\r\n              to={\r\n                (link = // first condition\r\n                  index === 0 || index === dirs.length - 1\r\n                    ? dirs[index]\r\n                    : props.replace(\"/\" + dirs[dirs.length - 1], \"\") || //or\r\n                      index === 3 // second condition\r\n                    ? props\r\n                        .replace(\"/\" + dirs[index + 1], \"\")\r\n                        .replace(\"/\" + dirs[dirs.length - 1], \"\")\r\n                    : null)\r\n              }\r\n            >\r\n              {(item = index === 0 ? \"Trang Chủ\" : item)}\r\n            </Link>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paths;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Pagination\\Pagination.js",["157","158","159","160"],"import React, { useState, useEffect } from \"react\";\r\nimport { BiFirstPage, BiLastPage } from \"react-icons/bi\";\r\nimport { MdNavigateNext, MdNavigateBefore } from \"react-icons/md\";\r\nconst Pagination = ({ tablesPerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul class=\"pagination\">\r\n        <a class=\"page-link\" onClick={() => paginate(1)} href={\"trang-\" + 1}>\r\n          <BiFirstPage />\r\n        </a>\r\n        <a class=\"page-link\">\r\n          <MdNavigateBefore />\r\n        </a>\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} class=\"page-item\">\r\n            <a\r\n              onClick={() => paginate(number)}\r\n              href={\"trang-\" + number}\r\n              class=\"page-link\"\r\n            >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}{\" \"}\r\n        <a class=\"page-link\">\r\n          <MdNavigateNext />\r\n        </a>{\" \"}\r\n        <a\r\n          class=\"page-link\"\r\n          onClick={() => paginate(pageNumbers.length)}\r\n          href={\"trang-\" + pageNumbers.length}\r\n        >\r\n          <BiLastPage />\r\n        </a>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\QuickMangaSlider\\QuickMangaSlider.js",["161"],"import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport MangaData from \"P:\\\\TruyenTranh9x\\\\truyen-tranh-9x\\\\src\\\\json\\\\Manga.json\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const QuickMangaSlider = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid carousel quickMg-Con\">\r\n        <div class=\"quickMangaSlider\">\r\n          <MGSlider />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction MGSlider() {\r\n  const history = useHistory();\r\n  let settings = {\r\n    centerMode: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 10,\r\n    cssEase: \"ease-out\",\r\n    swipeToSlide: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 360,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 2,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <Slider {...settings}>\r\n      {MangaData.map((mangaDetail, index) => {\r\n        return (\r\n          <div class=\"quickMangaBtns\">\r\n            <button\r\n              class=\"btn btn-secondary quickMangaBtn\"\r\n              value={\"/Manga/\" + mangaDetail.manga_name}\r\n              onClick={(e) => history.push(e.target.value)}\r\n            >\r\n              {mangaDetail.manga_name}\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </Slider>\r\n  );\r\n}\r\n\r\nexport default QuickMangaSlider;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Upload\\UploadManga.js",["162"],"import React, { useState, handleSubmit } from \"react\";\r\nimport genres from \"P:/TruyenTranh9x/truyen-tranh-9x/src/json/genres.json\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Dropzone } from \"../../components\";\r\nexport const UploadManga = (props) => {\r\n  let initState = {\r\n    title: \"\",\r\n    author: \"\",\r\n    chapter: \"\",\r\n    publishedYear: \"\",\r\n    genres: [],\r\n    images: [],\r\n  };\r\n  const [details, setDetails] = useState(initState);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(details);\r\n    // push this details\r\n  };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date(\"1990-01-01\"));\r\n\r\n  const getCheckBoxValue = (e) => {\r\n    let data = details.genres;\r\n    data.push(e.target.value);\r\n    setDetails({ ...details, genres: data });\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    setDetails({\r\n      ...details,\r\n      publishedYear: moment(date).format(\"YYYY-MM-DD\"),\r\n    });\r\n  };\r\n\r\n  const getFiles = (e) => {\r\n    let data = details.images;\r\n    data.push(e);\r\n    setDetails({ ...details, images: data });\r\n  };\r\n  return (\r\n    <div class=\"main-content  input-group commentSec \">\r\n      <form class=\"info-sec\" onSubmit={handleSubmit}>\r\n        <h2>Upload Truyện</h2>\r\n        <div class=\"input-group\">\r\n          <span class=\"spacing upload\">Nhập tên truyện</span>\r\n          <input\r\n            class=\"input-info in-Upload\"\r\n            placeholder=\"Tên truyện\"\r\n            onChange={(e) => setDetails({ ...details, title: e.target.value })}\r\n            value={details.title}\r\n          ></input>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <span class=\"spacing upload \">Nhập tác giả</span>\r\n          <input\r\n            class=\"input-info in-Upload\"\r\n            placeholder=\"Tên tác giả\"\r\n            onChange={(e) => setDetails({ ...details, author: e.target.value })}\r\n            value={details.author}\r\n          ></input>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <span class=\"spacing upload \">Nhập chapter</span>\r\n          <input\r\n            class=\"input-info in-Upload\"\r\n            placeholder=\"Tên và số chapter\"\r\n            onChange={(e) =>\r\n              setDetails({ ...details, chapter: e.target.value })\r\n            }\r\n            value={details.chapter}\r\n          ></input>\r\n        </div>\r\n        <div class=\"input-group datePicker\">\r\n          <span class=\"spacing upload year\">Nhập năm phát hành</span>\r\n          <div class=\"datePicker\">\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justify=\"space-around\">\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Date picker dialog\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <span class=\"spacing upload \">Chọn thể loại</span>\r\n          <div class=\"checkBoxGroup\">\r\n            {genres.map((genre, index) => {\r\n              return (\r\n                <label>\r\n                  {genre.name}\r\n                  <Checkbox\r\n                    value={genre.name}\r\n                    inputProps={{ \"aria-label\": genre.name }}\r\n                    onChange={(e) => getCheckBoxValue(e)}\r\n                  />\r\n                </label>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div class=\"dropZone\">\r\n          <Dropzone onUploaded={(file) => getFiles(file)}></Dropzone>\r\n        </div>\r\n        <div class=\"materialBtnCont\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadManga;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\Dropzone\\Dropzone.js",["163","164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nconst thumb = {\r\n  position: \"relative\",\r\n\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"3px solid #4d4d4d\",\r\n  marginBottom: 8,\r\n  width: \"50%\",\r\n  height: \"auto\",\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nfunction Dropzone(props) {\r\n  const [files, setFiles] = useState([]);\r\n  const {\r\n    acceptedFiles,\r\n    fileRejections,\r\n    getRootProps,\r\n    getInputProps,\r\n  } = useDropzone({\r\n    accept: \"image/jpeg, image/png\",\r\n    onDrop: (acceptedFiles) => [\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      ),\r\n      acceptedFiles.map((file) => {\r\n        props.onUploaded(file);\r\n      }),\r\n    ],\r\n  });\r\n  function formatBytes(bytes, decimals = 2) {\r\n    if (bytes === 0) return \"0 Bytes\";\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\r\n  }\r\n  const acceptedFileItems = acceptedFiles.map((file) => (\r\n    <li key={file.path}>\r\n      {file.path} - {formatBytes(file.size)}\r\n    </li>\r\n  ));\r\n\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map((e) => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img src={file.preview} style={img} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  return (\r\n    <section className=\"container card dropGroup\">\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        <p>Thả các file ảnh truyện vào đây</p>\r\n        <em>(Chỉ nhận file ảnh *.jpeg và *.png)</em>\r\n      </div>\r\n      <aside style={thumbsContainer}>{thumbs}</aside>{\" \"}\r\n      {files.length != 0 ? (\r\n        <aside>\r\n          <h4>Accepted files</h4>\r\n          <ul>{acceptedFileItems}</ul>\r\n          <h4>Rejected files</h4>\r\n          <ul>{fileRejectionItems}</ul>\r\n        </aside>\r\n      ) : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Dropzone;\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\CommentSec\\CommentSec.js",["166","167","168"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport { FaClock, FaReply, FaThumbsUp } from \"react-icons/fa\";\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nexport const CommentSec = ({ mangaComments }) => {\r\n  const [comments, setComments] = useState(mangaComments);\r\n\r\n  let commentCount = Object.keys(mangaComments).length;\r\n  return (\r\n    <>\r\n      <h2>Bình Luận ({commentCount})</h2>\r\n      <InputSec\r\n        submitHandler={(value) => setComments(mangaComments.unshift(value))}\r\n      ></InputSec>\r\n      <CommentsList comments={mangaComments}></CommentsList>\r\n      <div class=\"materialBtnCont\">\r\n        <Button variant=\"contained\" size=\"large\" color=\"primary\">\r\n          Đọc Thêm\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CommentSec;\r\n\r\nexport const InputSec = (props) => {\r\n  const { user } = useContext(UserContext);\r\n\r\n  let initState = {\r\n    name: user.username,\r\n    email: user.email,\r\n    comment: \"\",\r\n    like: 0,\r\n    date: new require(\"moment\")().format(\"YYYY-MM-DD HH:mm\"),\r\n    avatar: user.imageUrl,\r\n    reply: [],\r\n    userError: \"\",\r\n  };\r\n  const [details, setDetails] = useState(initState);\r\n  const [error, setError] = useState(false);\r\n  const validate = (e) => {\r\n    if (e) {\r\n      setError(true);\r\n      setDetails({\r\n        ...details,\r\n        userError: \"Xin vui lòng đăng nhập để bình luận\",\r\n      });\r\n    }\r\n  };\r\n  const submitHandler = (e) => {\r\n    // props.isReply != true  ?  insert API  comment pull request here\r\n    //if it is just a comment  => insert API reply pull request otherwise\r\n    e.preventDefault();\r\n\r\n    props.submitHandler(details);\r\n    setDetails(initState);\r\n  };\r\n\r\n  return (\r\n    <div class=\"input-group commentSec\">\r\n      <TextField\r\n        variant=\"outlined\"\r\n        className=\"input-com\"\r\n        multiline\r\n        rows={4}\r\n        placeholder=\"Nhập bình luận\"\r\n        onChange={(e) => setDetails({ ...details, comment: e.target.value })}\r\n        value={details.comment}\r\n        id=\"customScroll\"\r\n        error={error}\r\n        id=\"standard-error-helper-text\"\r\n        helperText={details.userError}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <label>\r\n              <IconButton\r\n                color=\"primary\"\r\n                component=\"span\"\r\n                type=\"submit\"\r\n                disabled={details.comment === \"\" ? true : false}\r\n                onClick={(e) => (user ? submitHandler(e) : validate(true))}\r\n                className=\"iconBtn\"\r\n              >\r\n                <FiSend></FiSend>\r\n              </IconButton>\r\n            </label>\r\n          ),\r\n        }}\r\n      ></TextField>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CommentsList = ({ comments }) => {\r\n  return (\r\n    <ul class=\"comments-list\">\r\n      {comments.map((comment, index) => {\r\n        return (\r\n          <>\r\n            <li class=\"comment\" key={index}>\r\n              <CommentCard comment={comment}></CommentCard>\r\n            </li>\r\n          </>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport const LikeBtn = (props) => {\r\n  const [like, isLiked] = useState(false);\r\n  let likeState = props.comment.like;\r\n  console.log(likeState);\r\n\r\n  const likeChange = () => {\r\n    //here I return the likeState back to the comment it came from so you can return the comment with a pull API\r\n    //But i think you should put ur pull request this likeState directly from here.\r\n    props.likeChange(likeState);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      class={like === true ? \"clear-Btn like-Btn\" : \"clear-Btn\"}\r\n      onClick={() => isLiked(!like)}\r\n    >\r\n      <FaThumbsUp class=\"thumbUp\"></FaThumbsUp>\r\n      <span class=\"like_numb\" onChange={likeChange}>\r\n        {(likeState = like === true ? likeState + 1 : props.comment.like)}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const CommentCard = ({ comment }) => {\r\n  const [inCom, setComment] = useState(comment);\r\n  const [reply, replySelected] = useState(false);\r\n  return (\r\n    <>\r\n      <CommentBox comment={comment}></CommentBox>\r\n      <div class=\"replySec\">\r\n        <button class=\"clear-Btn\" onClick={() => replySelected(!reply)}>\r\n          Trả lời <FaReply class=\"replyI\"></FaReply>\r\n        </button>\r\n        <LikeBtn\r\n          comment={comment}\r\n          likeChange={(value) => comment.like === value}\r\n        ></LikeBtn>\r\n      </div>\r\n      {reply ? (\r\n        <div class=\"reply-In\">\r\n          <InputSec\r\n            isReply={true}\r\n            submitHandler={(value) =>\r\n              delete value.reply && setComment(comment.reply.push(value))\r\n            }\r\n          ></InputSec>\r\n        </div>\r\n      ) : null}\r\n      {comment.reply === null ? null : (\r\n        <ul class=\"comments-list replyList\">\r\n          {comment.reply.map((repCom, index) => {\r\n            return (\r\n              <li class=\"comment\" key={index}>\r\n                <CommentBox comment={repCom}></CommentBox>\r\n                <div class=\"replySec\">\r\n                  <LikeBtn\r\n                    comment={repCom}\r\n                    likeChange={(value) => comment.like === value}\r\n                  ></LikeBtn>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CommentBox = ({ comment }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div class=\"commentBox\">\r\n      <div class=\"\">\r\n        <Avatar\r\n          variant=\"rounded\"\r\n          src={comment.avatar}\r\n          alt=\"avatar\"\r\n          class=\"avatarImg\"\r\n        ></Avatar>\r\n      </div>\r\n      <div class=\"card commentCard\">\r\n        <div class=\"row comment-info\">\r\n          <h5 class=\"name\">{comment.name}</h5>\r\n          <FaClock class=\"icon\" />\r\n          <span class=\"date-time\">\r\n            {new Date(comment.date).toLocaleString(\"vi\", {\r\n              hour12: false,\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n              day: \"numeric\",\r\n              month: \"numeric\",\r\n              year: \"numeric\",\r\n            })}\r\n          </span>\r\n          <div class=\"dropDownReport\">\r\n            <IconButton\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              aria-label=\"delete\"\r\n              component=\"span\"\r\n              onClick={handleClick}\r\n            >\r\n              <ArrowDropDownIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>Báo cáo</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n        <p>{comment.comment}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Login\\Login.js",["169","170","171","172","173","174","175"],"import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { UserContext } from \"../../UserContext\";\r\nimport { MetaDecorator } from \"../../components\";\r\n\r\nexport const UserLogin = async (userLogin) => {\r\n  // add request here\r\n\r\n  return {\r\n    id: 5,\r\n    username: \"admin\",\r\n    email: userLogin.email,\r\n    imageUrl:\r\n      \"https://icatcare.org/app/uploads/2018/07/Thinking-of-getting-a-cat.png\",\r\n  };\r\n};\r\n\r\nexport const Login = () => {\r\n  const { setUser } = useContext(UserContext);\r\n  let initState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n  };\r\n  const [inputs, setInputs] = useState(initState);\r\n\r\n  let [hasErrors, setErrors] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function signUp(res, type) {\r\n    let postData;\r\n    if (type === \"google\" && res.profileObj) {\r\n      postData = {\r\n        id: res.profileObj.googleId,\r\n        username: res.profileObj.name,\r\n        email: res.profileObj.email,\r\n        imageUrl: res.profileObj.imageUrl,\r\n      };\r\n    }\r\n    setUser(postData);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n\r\n    signUp(response, \"google\");\r\n  };\r\n  const responseFacebook = (response) => {\r\n    console.log(response);\r\n    signUp(response, \"facebook\");\r\n    //package scripts file :     \"build\": \"react-scripts build\",\r\n  };\r\n\r\n  const validate = () => {\r\n    let isError = false;\r\n    let errors = { emailError: \"\", passwordError: \"\" };\r\n    var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n\r\n    // example for correct email and password\r\n    const correctInfo = {\r\n      email: \"nam@gmail.com\",\r\n      password: \"123\",\r\n    };\r\n    if (inputs.email === \"\" || inputs.password === \"\") {\r\n      isError = true;\r\n      errors.emailError = \"Không được bỏ trống mục email hay mật khẩu\";\r\n      errors.passwordError = \"Không được bỏ trống mục email hay mật khẩu\";\r\n    } else if (\r\n      inputs.email != correctInfo.email ||\r\n      inputs.password != correctInfo.password\r\n    ) {\r\n      //add api request for validated email and password here\r\n      isError = true;\r\n      errors.emailError =\r\n        \"Sai email hoặc mật khẩu. Xin nhập đúng thông tin hoặc đổi mật khẩu nếu bạn quên mật khẩu.\";\r\n      errors.passwordError =\r\n        \"Sai email hoặc mật khẩu. Xin nhập đúng thông tin hoặc đổi mật khẩu nếu bạn quên mật khẩu.\";\r\n    } else if (reg.test(inputs.email) === false) {\r\n      isError = true;\r\n      errors.emailError = \"Phải nhập đúng email\";\r\n    }\r\n\r\n    if (isError) {\r\n      setInputs({\r\n        ...inputs,\r\n        passwordError: errors.passwordError,\r\n        emailError: errors.emailError,\r\n      });\r\n    }\r\n    return isError;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const err = validate();\r\n    if (err) {\r\n      setErrors(err);\r\n    } else {\r\n      let userLogin = { email: inputs.email, passowrd: inputs.password };\r\n      const user = await UserLogin(userLogin);\r\n      setUser(user);\r\n      setInputs(initState);\r\n\r\n      setErrors(err);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"main-content\">\r\n      <MetaDecorator\r\n        title=\"Login\"\r\n        description=\"Login with either facebook, google or registed account\"\r\n      />\r\n\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng nhập\r\n          </Typography>\r\n          <GoogleLogin\r\n            clientId=\"445736540056-ej8eakbeh8n0hrkftbpr9fibfp4nnk4s.apps.googleusercontent.com\"\r\n            className=\"gLoginBtn\"\r\n            buttonText=\"Đăng nhập bằng Google\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n          <div class=\"facebookCont\">\r\n            <FacebookLogin\r\n              cssClass=\"fLoginBtn\"\r\n              appId=\"1088597931155576\"\r\n              autoLoad={false}\r\n              fields=\"name,email,picture\"\r\n              //onClick={componentClicked}\r\n              textButton=\"Đăng nhập bằng Facebook\"\r\n              callback={responseFacebook}\r\n              icon={<FacebookIcon />}\r\n            />\r\n          </div>\r\n          <form className={classes.form}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Tài khoản Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={inputs.email}\r\n              onChange={(e) => setInputs({ ...inputs, email: e.target.value })}\r\n              error={hasErrors}\r\n              id=\"standard-error-helper-text\"\r\n              helperText={inputs.emailError}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Mật khẩu\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={inputs.password}\r\n              onChange={(e) =>\r\n                setInputs({ ...inputs, password: e.target.value })\r\n              }\r\n              error={hasErrors}\r\n              id=\"standard-error-helper-text\"\r\n              helperText={inputs.passwordError}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Ghi nhớ tài khoản\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/forgot-password\" variant=\"body2\">\r\n                  Quên mật khẩu?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/sign-up\" variant=\"body2\">\r\n                  {\"Không có tài khoản? Đăng ký\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    height: \"50px\",\r\n    margin: theme.spacing(1, 0, 2),\r\n    fontFamily: \"Roboto\",\r\n  },\r\n}));\r\n","P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Login\\SignUp.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\Login\\ForgotPassword.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\UserContext.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\pages\\SearchResult\\PageNotFound.js",[],"P:\\TruyenTranh9x\\truyen-tranh-9x\\src\\components\\MetaDecorator\\MetaDecorator.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":38,"column":10,"nodeType":"182","messageId":"183","endLine":38,"endColumn":18},{"ruleId":"180","severity":1,"message":"184","line":89,"column":10,"nodeType":"182","messageId":"183","endLine":89,"endColumn":16},{"ruleId":"180","severity":1,"message":"185","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":14},{"ruleId":"180","severity":1,"message":"186","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":21},{"ruleId":"180","severity":1,"message":"188","line":8,"column":23,"nodeType":"182","messageId":"183","endLine":8,"endColumn":33},{"ruleId":"180","severity":1,"message":"189","line":17,"column":18,"nodeType":"182","messageId":"183","endLine":17,"endColumn":26},{"ruleId":"180","severity":1,"message":"190","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":20},{"ruleId":"180","severity":1,"message":"191","line":2,"column":22,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"192","line":98,"column":7,"nodeType":"182","messageId":"183","endLine":98,"endColumn":22},{"ruleId":"180","severity":1,"message":"193","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"194","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":14},{"ruleId":"180","severity":1,"message":"195","line":11,"column":9,"nodeType":"182","messageId":"183","endLine":11,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":81,"column":18,"nodeType":"198","endLine":81,"endColumn":65},{"ruleId":"180","severity":1,"message":"199","line":19,"column":18,"nodeType":"182","messageId":"183","endLine":19,"endColumn":22},{"ruleId":"180","severity":1,"message":"193","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"186","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"201","line":16,"column":9,"nodeType":"198","endLine":16,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":30,"column":9,"nodeType":"198","endLine":30,"endColumn":30},{"ruleId":"180","severity":1,"message":"202","line":6,"column":10,"nodeType":"182","messageId":"183","endLine":6,"endColumn":17},{"ruleId":"180","severity":1,"message":"203","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":39},{"ruleId":"204","severity":1,"message":"205","line":52,"column":32,"nodeType":"206","messageId":"207","endLine":52,"endColumn":34},{"ruleId":"196","severity":1,"message":"197","line":88,"column":9,"nodeType":"198","endLine":88,"endColumn":47},{"ruleId":"208","severity":1,"message":"209","line":109,"column":21,"nodeType":"210","messageId":"211","endLine":109,"endColumn":23},{"ruleId":"180","severity":1,"message":"212","line":15,"column":10,"nodeType":"182","messageId":"183","endLine":15,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":80,"column":9,"nodeType":"215","messageId":"216","endLine":80,"endColumn":40},{"ruleId":"180","severity":1,"message":"217","line":144,"column":10,"nodeType":"182","messageId":"183","endLine":144,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":77,"column":31,"nodeType":"220","messageId":"221","endLine":77,"endColumn":32,"suggestions":"222"},{"ruleId":"218","severity":1,"message":"223","line":77,"column":36,"nodeType":"220","messageId":"221","endLine":77,"endColumn":37,"suggestions":"224"},{"ruleId":"218","severity":1,"message":"219","line":77,"column":52,"nodeType":"220","messageId":"221","endLine":77,"endColumn":53,"suggestions":"225"},{"ruleId":"208","severity":1,"message":"209","line":89,"column":20,"nodeType":"210","messageId":"211","endLine":89,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":90,"column":23,"nodeType":"210","messageId":"211","endLine":90,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":178,"column":15,"nodeType":"215","messageId":"216","endLine":178,"endColumn":46},{"ruleId":"213","severity":1,"message":"214","line":196,"column":15,"nodeType":"215","messageId":"216","endLine":196,"endColumn":46},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'readJson' is defined but never used.","Identifier","unusedVar","'height' is assigned a value but never used.","'MangaTable2' is defined but never used.","'useEffect' is defined but never used.","'BiFirstPage' is defined but never used.","'BiLastPage' is defined but never used.","'setTable' is assigned a value but never used.","'FaFacebook' is defined but never used.","'FaMailBulk' is defined but never used.","'onContentChange' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'chapter' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'link' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","'handleSubmit' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'comments' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'inCom' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["228","229"],"Unnecessary escape character: \\@.",["230","231"],["232","233"],"no-global-assign","no-unsafe-negation",{"messageId":"234","fix":"235","desc":"236"},{"messageId":"237","fix":"238","desc":"239"},{"messageId":"234","fix":"240","desc":"236"},{"messageId":"237","fix":"241","desc":"239"},{"messageId":"234","fix":"242","desc":"236"},{"messageId":"237","fix":"243","desc":"239"},"removeEscape",{"range":"244","text":"245"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"246","text":"247"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"248","text":"245"},{"range":"249","text":"247"},{"range":"250","text":"245"},{"range":"251","text":"247"},[2347,2348],"",[2347,2347],"\\",[2352,2353],[2352,2352],[2368,2369],[2368,2368]]